// <auto-generated />
using System;
using COVID.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COVID.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210925221408_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("COVID.App.Dominio.Clase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracionClase")
                        .HasColumnType("int");

                    b.Property<int>("cantidad_inscritos")
                        .HasColumnType("int");

                    b.Property<string>("hora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("profesorid")
                        .HasColumnType("int");

                    b.Property<int?>("salonid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("profesorid");

                    b.HasIndex("salonid");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("COVID.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Sintoma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("personaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("personaid");

                    b.ToTable("HistoriaClinicas");
                });

            modelBuilder.Entity("COVID.App.Dominio.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("COVID.App.Dominio.Salon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("aforo")
                        .HasColumnType("int");

                    b.Property<int>("numerosalon")
                        .HasColumnType("int");

                    b.Property<int?>("sedeid")
                        .HasColumnType("int");

                    b.Property<string>("unidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("sedeid");

                    b.ToTable("Salones");
                });

            modelBuilder.Entity("COVID.App.Dominio.Sede", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad_salones")
                        .HasColumnType("int");

                    b.Property<string>("nombre_sede")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("COVID.App.Dominio.Directivo", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<string>("facultad")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Directivo");
                });

            modelBuilder.Entity("COVID.App.Dominio.Estudiante", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<int?>("Claseid")
                        .HasColumnType("int");

                    b.Property<string>("carrera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("semestre")
                        .HasColumnType("int");

                    b.HasIndex("Claseid");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("COVID.App.Dominio.Personal_Aseo", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<int>("turno")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Personal_Aseo");
                });

            modelBuilder.Entity("COVID.App.Dominio.Profesor", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<string>("asignatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Profesor");
                });

            modelBuilder.Entity("COVID.App.Dominio.Clase", b =>
                {
                    b.HasOne("COVID.App.Dominio.Profesor", "profesor")
                        .WithMany()
                        .HasForeignKey("profesorid");

                    b.HasOne("COVID.App.Dominio.Salon", "salon")
                        .WithMany()
                        .HasForeignKey("salonid");

                    b.Navigation("profesor");

                    b.Navigation("salon");
                });

            modelBuilder.Entity("COVID.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("COVID.App.Dominio.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("personaid");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("COVID.App.Dominio.Salon", b =>
                {
                    b.HasOne("COVID.App.Dominio.Sede", "sede")
                        .WithMany()
                        .HasForeignKey("sedeid");

                    b.Navigation("sede");
                });

            modelBuilder.Entity("COVID.App.Dominio.Estudiante", b =>
                {
                    b.HasOne("COVID.App.Dominio.Clase", null)
                        .WithMany("estudiante")
                        .HasForeignKey("Claseid");
                });

            modelBuilder.Entity("COVID.App.Dominio.Clase", b =>
                {
                    b.Navigation("estudiante");
                });
#pragma warning restore 612, 618
        }
    }
}
